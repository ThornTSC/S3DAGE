// Alteration to breakable wall mappings in unlockable acts. Not fully implemented at this time.
// Function taken from objects\level\wall.lemon
//# address-hook(0x02131c) end(0x021560)
function void fn02131c()
{
	base.fn02131c()

	if (unlock_act)
	{
		objA0.mapping_offset = 0x021aba
		objA0.sprite_attributes = (sprite_attribute.PALETTE.LINE2 | 0x0052)
		objA0.box_size.x = 0x10
		objA0.box_size.y = 0x20
		objA0.countdown_callback = 0x021a7a
		u32[A0 + 0x38] = 0x021a9a

		if (objA0.animation.sprite == 0x02)
		{
			objA0.update_address = 0x021818
			return
		}
	}
}

// Alteration to jump ramp angle in unlockable acts to match shape of EHZ curves
// Function taken from objects\level\jumpramp.lemon
//# address-hook(0x024d9a) end(0x024e32)
function void fn024d9a()
{
	if (!unlock_act)
	{
		base.fn024d9a()
		return
	}

	if (u8[A1 + 0x2a] & char.flag.IN_AIR)
		return

	s16 dx = objA1.position.x.u16 - objA0.position.x.u16 + 0x10
	s16 dy = objA1.position.y.u16 - objA0.position.y.u16
	if (dx >= 0 && dx < 0x20 && dy >= -0x14 && dy <= 0x20)
	{
		if (u8[A1 + 0x2e] == 0)
		{
			if ((objA0.flags2a & 0x01) == 0)
			{
				if (objA1.velocity.x < 0x400)
					return

				objA1.velocity.x += 0x300		// 0x400 in normal acts
			}
			else
			{
				if (objA1.velocity.x > -0x400)
					return

				objA1.velocity.x -= 0x300	// 0x400 in normal acts
			}

			objA1.velocity.y = -0x780	// -0x700 in normal acts
			u8[A1 + 0x2a] |= char.flag.IN_AIR
			u8[A1 + 0x05] = 2
			u16[A1 + 0x1c] = 1
			u8[A1 + 0x27] = 1
			u8[A1 + 0x20] = 0
			u8[A1 + 0x30] = 0
			u8[A1 + 0x31] = 4
			u8[A1 + 0x2d] = 5
		}
	}
}
