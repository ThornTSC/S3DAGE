// Update animals used to match Sonic 2 zones when needed.
// Function taken from objects\misc\freedanimal.lemon
//# address-hook(0x02c8b8) end(0x02c9d4)
function void fn02c8b8()
{
#if STANDALONE
	Standalone.onAnimalFreed()
#endif

	if (objA0.subtype2c != 0)
	{
		D0 = objA0.subtype2c * 2
		objA0.base_state = D0.u8
		D0.u16 -= 0x14
		objA0.sprite_attributes = u16[0x02c8a2 + D0.s16]
		objA0.mapping_offset = u32[0x02c876 + D0.s16 * 2]

		A1 = 0x02c84a
		objA0.value32 = u16[A1 + D0.s16]
		objA0.velocity.x = u16[A1 + D0.s16]
		u16[A0 + 0x34] = u16[A1 + D0.s16 + 2]
		objA0.velocity.y = u16[A1 + D0.s16 + 2]
		objA0.hitbox_extends.y = 12
		objA0.render_flags = (render_flag.WORLD | render_flag.FLIP_X)
		objA0.sprite_priority = 0x300
		objA0.box_size.x = 8
		objA0.animation.timer = 7
	}
	else
	{
		objA0.base_state += 2
		D0.u16 = getRandomNumber() & 0x01
		objA0.sprite_attributes = (D0.u16 == 0) ? 0x0580 : 0x0592

		u16 zoneID = (unlock_act) ? 0x04 : global.zone	// EHZ uses the same animals as FBZ
		D1 = global.zone * 2 + D0.u16
		if (unlock_act)
			D1 = 0x04 * 2 + D0.u16	// EHZ uses the same animals as FBZ
		D0.u8 = u8[0x02c7ba + D1.s16]
		u8[A0 + 0x30] = D0.u8
		D0.u16 <<= 3

		A1 = 0x02c7ea + D0.u16
		objA0.value32 = u16[(A1+=2)-2]
		u16[A0 + 0x34] = u16[(A1+=2)-2]
		objA0.mapping_offset = u32[(A1+=4)-4]
		objA0.hitbox_extends.y = 0x0c
		objA0.render_flags = (render_flag.WORLD | render_flag.FLIP_X)
		objA0.sprite_priority = 0x300
		objA0.box_size.x = 8
		objA0.animation.timer = 7
		objA0.animation.sprite = 2
		objA0.velocity.y = -0x400
		if (objA0.flags38 == 0)
		{
			if (allocDynamicObjectStd())
			{
				// Spawn floating points display
				objA1.update_address = 0x02cce0
				objA1.position.x.u16 = objA0.position.x.u16
				objA1.position.y.u16 = objA0.position.y.u16
				D0.u16 = objA0.value3e >> 1
				objA1.animation.sprite = D0.u8
			}
		}
		else
		{
			objA0.base_state = 0x1c
			objA0.velocity.x = 0
		}
	}

	DrawObject()
}
